%!PS-Adobe-2.0
%%Title: plott32.ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Jun 16 14:23:24 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
882 420 M
5436 0 V
1.000 UL
LTb
882 420 M
63 0 V
5373 0 R
-63 0 V
798 420 M
gsave 0 setgray
( 1) Rshow
grestore
1.000 UL
LTb
882 736 M
31 0 V
5405 0 R
-31 0 V
882 921 M
31 0 V
5405 0 R
-31 0 V
882 1052 M
31 0 V
5405 0 R
-31 0 V
882 1154 M
31 0 V
5405 0 R
-31 0 V
882 1237 M
31 0 V
5405 0 R
-31 0 V
882 1307 M
31 0 V
5405 0 R
-31 0 V
882 1368 M
31 0 V
5405 0 R
-31 0 V
882 1422 M
31 0 V
5405 0 R
-31 0 V
1.000 UL
LTa
882 1470 M
5436 0 V
1.000 UL
LTb
882 1470 M
63 0 V
5373 0 R
-63 0 V
-5457 0 R
gsave 0 setgray
( 10) Rshow
grestore
1.000 UL
LTb
882 1786 M
31 0 V
5405 0 R
-31 0 V
882 1971 M
31 0 V
5405 0 R
-31 0 V
882 2102 M
31 0 V
5405 0 R
-31 0 V
882 2204 M
31 0 V
5405 0 R
-31 0 V
882 2287 M
31 0 V
5405 0 R
-31 0 V
882 2357 M
31 0 V
5405 0 R
-31 0 V
882 2418 M
31 0 V
5405 0 R
-31 0 V
882 2472 M
31 0 V
5405 0 R
-31 0 V
1.000 UL
LTa
882 2520 M
5436 0 V
1.000 UL
LTb
882 2520 M
63 0 V
5373 0 R
-63 0 V
-5457 0 R
gsave 0 setgray
( 100) Rshow
grestore
1.000 UL
LTb
882 2836 M
31 0 V
5405 0 R
-31 0 V
882 3021 M
31 0 V
5405 0 R
-31 0 V
882 3152 M
31 0 V
5405 0 R
-31 0 V
882 3254 M
31 0 V
5405 0 R
-31 0 V
882 3337 M
31 0 V
5405 0 R
-31 0 V
882 3407 M
31 0 V
5405 0 R
-31 0 V
882 3468 M
31 0 V
5405 0 R
-31 0 V
882 3522 M
31 0 V
5405 0 R
-31 0 V
1.000 UL
LTa
882 3570 M
5436 0 V
1.000 UL
LTb
882 3570 M
63 0 V
5373 0 R
-63 0 V
-5457 0 R
gsave 0 setgray
( 1000) Rshow
grestore
1.000 UL
LTb
882 3886 M
31 0 V
5405 0 R
-31 0 V
882 4071 M
31 0 V
5405 0 R
-31 0 V
882 4202 M
31 0 V
5405 0 R
-31 0 V
882 4304 M
31 0 V
5405 0 R
-31 0 V
882 4387 M
31 0 V
5405 0 R
-31 0 V
882 4457 M
31 0 V
5405 0 R
-31 0 V
882 4518 M
31 0 V
5405 0 R
-31 0 V
882 4572 M
31 0 V
5405 0 R
-31 0 V
1.000 UL
LTa
882 4620 M
5436 0 V
1.000 UL
LTb
882 4620 M
63 0 V
5373 0 R
-63 0 V
-5457 0 R
gsave 0 setgray
( 10000) Rshow
grestore
1.000 UL
LTb
1.000 UL
LTa
5930 420 M
0 3857 V
0 280 R
0 63 V
1.000 UL
LTb
5930 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
gsave 0 setgray
(32768) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTa
5541 420 M
0 3857 V
0 280 R
0 63 V
1.000 UL
LTb
5541 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
gsave 0 setgray
(16384) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTa
5153 420 M
0 3857 V
0 280 R
0 63 V
1.000 UL
LTb
5153 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
gsave 0 setgray
(8192) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTa
4765 420 M
0 4200 V
1.000 UL
LTb
4765 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
gsave 0 setgray
(4096) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTa
4377 420 M
0 4200 V
1.000 UL
LTb
4377 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
gsave 0 setgray
(2048) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTa
3988 420 M
0 4200 V
1.000 UL
LTb
3988 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
gsave 0 setgray
(1500) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTa
3600 420 M
0 4200 V
1.000 UL
LTb
3600 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
gsave 0 setgray
(1024) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTa
3212 420 M
0 4200 V
1.000 UL
LTb
3212 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
gsave 0 setgray
(512) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTa
2823 420 M
0 4200 V
1.000 UL
LTb
2823 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
gsave 0 setgray
(256) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTa
2435 420 M
0 4200 V
1.000 UL
LTb
2435 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
gsave 0 setgray
(128) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTa
2047 420 M
0 4200 V
1.000 UL
LTb
2047 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
gsave 0 setgray
(64) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTa
1659 420 M
0 4200 V
1.000 UL
LTb
1659 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
gsave 0 setgray
(16) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTa
1270 420 M
0 4200 V
1.000 UL
LTb
1270 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
gsave 0 setgray
(1) Cshow
grestore
1.000 UL
LTb
6318 420 M
-63 0 V
147 0 R
gsave 0 setgray
( 0) Lshow
grestore
1.000 UL
LTb
6318 1260 M
-63 0 V
147 0 R
gsave 0 setgray
( 10000) Lshow
grestore
1.000 UL
LTb
6318 2100 M
-63 0 V
147 0 R
gsave 0 setgray
( 20000) Lshow
grestore
1.000 UL
LTb
6318 2940 M
-63 0 V
147 0 R
gsave 0 setgray
( 30000) Lshow
grestore
1.000 UL
LTb
6318 3780 M
-63 0 V
147 0 R
gsave 0 setgray
( 40000) Lshow
grestore
1.000 UL
LTb
6318 4620 M
-63 0 V
147 0 R
gsave 0 setgray
( 50000) Lshow
grestore
1.000 UL
LTb
1.000 UL
LTb
882 420 M
5436 0 V
0 4200 V
-5436 0 V
882 420 L
LTb
140 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(Speed \(Mbps\)) Cshow
grestore
grestore
LTb
7059 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(Samples/second) Cshow
grestore
grestore
LTb
3600 70 M
gsave 0 setgray
(Sample size \(bytes\)) Cshow
grestore
LTb
3600 4830 M
gsave 0 setgray
(uDDS Throughput Results \(inter-thread 32-bit\)) Cshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
5667 4487 M
gsave 0 setgray
(speed) Rshow
grestore
LT0
5751 4487 M
399 0 V
1270 657 M
389 630 V
388 561 V
388 285 V
388 308 V
389 331 V
388 313 V
388 164 V
389 123 V
388 243 V
388 326 V
388 107 V
389 102 V
1270 657 Pls
1659 1287 Pls
2047 1848 Pls
2435 2133 Pls
2823 2441 Pls
3212 2772 Pls
3600 3085 Pls
3988 3249 Pls
4377 3372 Pls
4765 3615 Pls
5153 3941 Pls
5541 4048 Pls
5930 4150 Pls
5950 4487 Pls
1.000 UP
1.000 UL
LT1
LTb
5667 4347 M
gsave 0 setgray
(samples) Rshow
grestore
LT1
5751 4347 M
399 0 V
1270 3948 M
389 -17 V
388 25 V
388 -134 V
388 -4 V
389 137 V
388 -9 V
388 -75 V
389 -135 V
388 -488 V
388 61 V
5541 2247 L
389 -683 V
1270 3948 Crs
1659 3931 Crs
2047 3956 Crs
2435 3822 Crs
2823 3818 Crs
3212 3955 Crs
3600 3946 Crs
3988 3871 Crs
4377 3736 Crs
4765 3248 Crs
5153 3309 Crs
5541 2247 Crs
5930 1564 Crs
5950 4347 Crs
1.000 UL
LTb
882 420 M
5436 0 V
0 4200 V
-5436 0 V
882 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
